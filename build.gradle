plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2020.3.2" // set this to the latest stable version
}

apply plugin: 'idea'
apply plugin: 'java'

sourceCompatibility = 1.11
targetCompatibility = 1.11

def ROBOT_MAIN_CLASS = "edu.greenblitz.icarus.main" // set this to the full name of the robot class (including package)

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all" << "-Werror"
    }
}

deploy {
    targets {
        roboRIO("roborio") {
            team = frc.getTeamNumber()
        }
    }
    artifacts {
        frcJavaArtifact('frcJava') {
            targets << "roborio"
            debug = frc.getDebugOrDefault(false)
        }

        fileTreeArtifact('frcStaticFileDeploy') {
            files = fileTree(dir: 'src/main/deploy')
            targets << "roborio"
            directory = '/home/lvuser/deploy'
        }
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    mavenCentral()
}

dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

    compile 'org.jetbrains:annotations:16.0.2'

    nativeZip wpi.deps.wpilibJni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.wpilibJni(wpi.platforms.desktop)
    // Optional lines, adds common robot code libraries to the project
    // The jitpack line in repositories is required for these libraries.
    compile 'com.github.GreenBlitz.MotionControl:motion:b58e6c0a206b00794c18ae6465f909c891dc517c'
    compile 'com.github.GreenBlitz:GBLib:d570a3b3db97a268e86cc56ccf64d590c6d573b2'
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'

    // Optional lines, used for writing tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    // Optional lines, used for logging
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)
}

test {
    // Optinal if you use juint for testing
    useJUnitPlatform()
}

wrapper{
    gradleVersion = '5.6'
}

